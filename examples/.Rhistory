help(melt)
packed
melt.data.frame(packed)
melt.list(packed)
melt.data.frame(packed)
melt(melt(packed))
melt.array(melt(packed))
melt.list(melt(packed))
melt.data.frame(melt(packed))
ls
ls()
packed
melt.data.frame(packed, id.vars=Mapping, data.vars=c('FN','TP','FP'))
melt.data.frame(packed, id.vars="Mapping", data.vars=c('FN','TP','FP'))
melt(SEH.30X.bwa.MAQ.av)
rbind(melt(SEH.30X.bwa.MAQ.av),melt(SEH.30X.perf.MAQ.av))
packed = rbind(melt(SEH.30X.bwa.MAQ.av),melt(SEH.30X.perf.MAQ.av))
packed$Mapping=factor(rep(c("BWA","Perf"),c(3,3)))
packed
names(packed)<-c("Data","Type","Mapping")
packed
packed=data.frame(packed)
packed
summary(packed)
m=ggplot(packed)
m+geom_bar(stat="identity",aes(group=factor(Type),color=Mapping)
)
SEH.30X.perf.SOAP.av=list(FN=7703, TP=3597239, FP=349)#
SEH.30X.bwa.SOAP.av=list(FN=64542, TP=3540400, FP=217553)#
SEH.30X.perf.MAQ.av=list(FN=7512, TP=3597430, FP=380)#
SEH.30X.bwa.MAQ.av=list(FN=62937, TP=3542005, FP=220451)#
#
PSH.30X.perf.SOAP.av=list(FN=1324, TP=3603618, FP=0)#
PSH.30X.bwa.SOAP.av=list(FN=44354, TP=3560588, FP=826935)#
PSH.30X.perf.MAQ.av=list(FN=1324, TP=3603618, FP=0)#
PSH.30X.bwa.MAQ.av=list(FN=43632, TP=3561310, FP=817332)
mPSH.30X.bwa.MAQ.av=melt(PSH.30X.bwa.MAQ.av)
library(ggplot)
library(ggplot2)
mPSH.30X.bwa.MAQ.av=melt(PSH.30X.bwa.MAQ.av)
mPSH.30X.perf.MAQ.av=melt(PSH.30X.perf.MAQ.av)
SEH.30X.perf.SOAP.av=melt(list(FN=7703, TP=3597239, FP=349))#
SEH.30X.bwa.SOAP.av=melt(list(FN=64542, TP=3540400, FP=217553))#
SEH.30X.perf.MAQ.av=melt(list(FN=7512, TP=3597430, FP=380))#
SEH.30X.bwa.MAQ.av=melt(list(FN=62937, TP=3542005, FP=220451))#
#
PSH.30X.perf.SOAP.av=melt(list(FN=1324, TP=3603618, FP=0))#
PSH.30X.bwa.SOAP.av=melt(list(FN=44354, TP=3560588, FP=826935))#
PSH.30X.perf.MAQ.av=melt(list(FN=1324, TP=3603618, FP=0))#
PSH.30X.bwa.MAQ.av=melt(list(FN=43632, TP=3561310, FP=817332))
PSH.30X.bwa.MAQ.av
everything=rbind(SEH.30X.perf.SOAP.av,SEH.30X.bwa.SOAP.av,SEH.30X.perf.MAQ.av,SEH.30X.bwa.MAQ.av,PSH.30X.perf.SOAP.av,PSH.30X.bwa.SOAP.av,PSH.30X.perf.MAQ.av,PSH.30X.bwa.MAQ.av)
everything
names(everything)<-c("Count","Type")
everything
everything$type=factor(type)
everything$type=factor(Type)
everything$Type=factor(everything$Type)
everything
summary(everything)
everything$Datatype=factor(rep(c("Heterozygosity.Error","Heterozygosity"),c(4,4)))
everything
everything$Datatype=factor(rep(c("Heterozygosity.Error","Heterozygosity"),c(12,12)))
everything
everything$Mapping=factor(rep(c("Perfect.venter1","BWA.hg19"),c(3,3)))
everything
everything=data.frame(everything)
everything
summary(everything)
summary(mtcars)
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(weight=Count, group="Datatype,color=Type))
""
m+geom_bar(stat="identity",position="dodge",aes(weight=Count, group=Datatype,color=Type))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Type, group=Datatype, color=Type))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Datatype, color=Type))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Datatype, fill=Type))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)
everything$Method=factor(rep(c("SOAP","MAQ"),c(6,6)))
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, group=Method, fill=Type))+facet_grid(. ~ Datatype)
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, group=Method, fill=Type))+facet_grid(. ~ Datatype)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping ~ Method, fill=Type))+facet_grid(. ~ Datatype)
everything$Mapping=factor(rep(c("SOAP.Perfect.venter1","SOAP.BWA.hg19","MAQ.Perfect.venter1","MAQ.BWA.hg19"),c(3,3)))
everything$Mapping=factor(rep(c("SOAP.Perfect.venter1", "SOAP.BWA.hg19", "MAQ.Perfect.venter1", "MAQ.BWA.hg19"), c(3,3,3,3)))
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)
everything$Mapping=factor(rep(c("SOAP.Perfect", "SOAP.BWA", "MAQ.Perf", "MAQ.BWA"), c(3,3,3,3)))
m<-ggplot(everything)
everything$Mapping=factor(rep(c("SOAP.Perfect", "SOAP.BWA", "MAQ.Perf", "MAQ.BWA"), c(3,3,3,3)))
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)
summary(everything)
everything$Mapping=factor(rep(c("SOAP.Perf", "SOAP.BWA", "MAQ.Perf", "MAQ.BWA"), c(3,3,3,3)))
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)
everything$Mapping=factor(rep(c("SP", "SB", "MP", "MB"), c(3,3,3,3)))
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)+scale_x_log10()
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)+scale_y_log10()
SEH.30X.perf.SOAP.av=melt(list(FN=7703, TP=3597239, FP=349))#
SEH.30X.bwa.SOAP.av=melt(list(FN=64542, TP=3540400, FP=217553))#
SEH.30X.perf.MAQ.av=melt(list(FN=7512, TP=3597430, FP=380))#
SEH.30X.bwa.MAQ.av=melt(list(FN=62937, TP=3542005, FP=220451))#
PSH.30X.perf.SOAP.av=melt(list(FN=1324, TP=3603618, FP=1))#
PSH.30X.bwa.SOAP.av=melt(list(FN=44354, TP=3560588, FP=826935))#
PSH.30X.perf.MAQ.av=melt(list(FN=1324, TP=3603618, FP=1))#
PSH.30X.bwa.MAQ.av=melt(list(FN=43632, TP=3561310, FP=817332))#
everything=rbind(SEH.30X.perf.SOAP.av,SEH.30X.bwa.SOAP.av,SEH.30X.perf.MAQ.av,SEH.30X.bwa.MAQ.av,PSH.30X.perf.SOAP.av,PSH.30X.bwa.SOAP.av,PSH.30X.perf.MAQ.av,PSH.30X.bwa.MAQ.av)#
names(everything)<-c("Count","Type")#
everything$Type=factor(everything$Type)#
everything$Datatype=factor(rep(c("Heterozygosity.Error","Heterozygosity"),c(12,12)))
everything$Mapping=factor(rep(c("SP", "SB", "MP", "MB"), c(3,3,3,3)))
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type))+facet_grid(. ~ Datatype)+scale_y_log10()
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type),alpha=0.6)+facet_grid(. ~ Datatype)+scale_y_log10()
m+geom_bar(stat="identity",position="dodge",aes(y=Count,x=Mapping, fill=Type),alpha=0.8)+facet_grid(. ~ Datatype)+scale_y_log10()
SEH.30X.perf.SOAP.av=melt(list(FN=7703, TP=3597239, FP=349))#
SEH.30X.bwa.SOAP.av=melt(list(FN=64542, TP=3540400, FP=217553))#
SEH.30X.perf.MAQ.av=melt(list(FN=7512, TP=3597430, FP=380))#
SEH.30X.bwa.MAQ.av=melt(list(FN=62937, TP=3542005, FP=220451))#
PSH.30X.perf.SOAP.av=melt(list(FN=1324, TP=3603618, FP=0))#
PSH.30X.bwa.SOAP.av=melt(list(FN=44354, TP=3560588, FP=826935))#
PSH.30X.perf.MAQ.av=melt(list(FN=1324, TP=3603618, FP=0))#
PSH.30X.bwa.MAQ.av=melt(list(FN=43632, TP=3561310, FP=817332))#
everything=rbind(SEH.30X.perf.SOAP.av,SEH.30X.bwa.SOAP.av,SEH.30X.perf.MAQ.av,SEH.30X.bwa.MAQ.av,PSH.30X.perf.SOAP.av,PSH.30X.bwa.SOAP.av,PSH.30X.perf.MAQ.av,PSH.30X.bwa.MAQ.av)#
names(everything)<-c("Count","Type")#
everything$Type=factor(everything$Type)#
everything$Datatype=factor(rep(c("Heterozygosity.Error","Heterozygosity"),c(12,12)))#
everything$Mapping=factor(rep(c("Perfect.venter1","BWA.hg19"),c(3,3)))
everything$Method=factor(rep(c("SOAP","MAQ"),c(6,6)))
summary(everything)
m<-ggplot(everything,aes(position="position_identity"))
m<-ggplot(everything,position="position_identity",aes(y=Count,x=Method))
m+geom_bar(stat="identity",position="dodge",aes(group=Mapping, fill=Type),alpha=0.8)+facet_grid(. ~ Datatype)+scale_y_log10()
m<-ggplot(everything,position="position_identity",aes(y=Count,group=Method,fill=Type))
m+geom_bar(stat="identity",position="dodge",aes(x=Mapping, fill=Type),alpha=0.8)+facet_grid(. ~ Datatype)+scale_y_log10()
SEH.30X.perf.SOAP.av=melt(list(FN=7703, TP=3597239, FP=349))#
SEH.30X.bwa.SOAP.av=melt(list(FN=64542, TP=3540400, FP=217553))#
SEH.30X.perf.MAQ.av=melt(list(FN=7512, TP=3597430, FP=380))#
SEH.30X.bwa.MAQ.av=melt(list(FN=62937, TP=3542005, FP=220451))#
PSH.30X.perf.SOAP.av=melt(list(FN=1324, TP=3603618, FP=1))#
PSH.30X.bwa.SOAP.av=melt(list(FN=44354, TP=3560588, FP=826935))#
PSH.30X.perf.MAQ.av=melt(list(FN=1324, TP=3603618, FP=1))#
PSH.30X.bwa.MAQ.av=melt(list(FN=43632, TP=3561310, FP=817332))#
everything=data.frame()#
everything=rbind(SEH.30X.perf.SOAP.av,SEH.30X.bwa.SOAP.av,PSH.30X.perf.SOAP.av,PSH.30X.bwa.SOAP.av)
everything
names(everything)<-c("MAQ","Type")
names(everything)<-c("SOAP","Type")
everything$MAQ<-rbind(SEH.30X.perf.MAQ.av$value,SEH.30X.bwa.MAQ.av$value,PSH.30X.perf.MAQ.av$value,PSH.30X.bwa.MAQ.av$value)
everything$MAQ<-c(SEH.30X.perf.MAQ.av$value,SEH.30X.bwa.MAQ.av$value,PSH.30X.perf.MAQ.av$value,PSH.30X.bwa.MAQ.av$value)
everything
everything$Type=factor(everything$Type)#
everything$Datatype=factor(rep(c("Heterozygosity.Error","Heterozygosity"),c(6,6)))#
everything$Mapping=factor(rep(c("Perfect.venter1","BWA.hg19"),c(3,3)))
everything
summary(everything)
m<-ggplot(everything)
m+geom_bar(stat="identity",position="dodge",aes(y=SOAP,x=Mapping, fill=Type),alpha=0.8)+geom_bar(stat="identity",position="dodge",aes(y=MAQ,x=Mapping, fill=Type),alpha=0.8)+facet_grid(. ~ Datatype)+scale_y_log10()
m+geom_bar(stat="identity",position="dodge",aes(y=SOAP,x=Mapping, fill=Type),alpha=0.3)+geom_bar(stat="identity",position="dodge",aes(y=MAQ,x=Mapping, fill=Type),alpha=0.3)+facet_grid(. ~ Datatype)+scale_y_log10()
m+geom_bar(stat="identity",position="dodge",aes(y=SOAP,x=Mapping, fill=Type),alpha=0.5)+geom_bar(stat="identity",position="dodge",aes(y=MAQ,x=Mapping, fill=Type),alpha=0.5)+facet_grid(. ~ Datatype)+scale_y_log10()
### Code by Eric Lecoutre, Universite catholique de Louvain, Belgium#
### Winner of the R Homepage graphics competition 2004#
#
### Created using R 1.8.1, still works in 2.9.2#
#
require(ade4)#
## require(mva)   # was merged into stats#
require(RColorBrewer)#
require(pixmap)#
#
ltitle <- function(x,backcolor="#e8c9c1",forecolor="darkred",cex=2,ypos=0.4)#
{	#
    plot(x=c(-1,1),y=c(0,1),xlim=c(0,1),ylim=c(0,1),type="n",axes=FALSE)#
    polygon(x=c(-2,-2,2,2),y=c(-2,2,2,-2),col=backcolor,border=NA)#
    text(x=0,y=ypos,pos=4,cex=cex,labels=x,col=forecolor)#
}#
#
plotacpclust <- function(data,xax=1,yax=2,hcut,cor=TRUE,clustermethod="ave",#
                         colbacktitle="#e8c9c1",wcos=3,Rpowered=FALSE,...)#
{#
    ## data: data.frame to analyze#
    ## xax, yax: Factors to select for graphs#
    #
    ## Parameters for hclust#
    ##   hcut#
    ##   clustermethod#
    #
    require(ade4)#
    #
    pcr=princomp(data,cor=cor)#
    #
    datac=t((t(data)-pcr$center )/pcr$scale)#
    #
    hc=hclust(dist(data),method=clustermethod)#
    if (missing(hcut)) hcut=quantile(hc$height,c(0.97))#
    #
    def.par <- par(no.readonly = TRUE)#
    on.exit(par(def.par))#
    #
    mylayout=layout(matrix(c(1,2,3,4,5,1,2,3,4,6,7,7,7,8,9,7,7,7,10,11),ncol=4),widths=c(4/18,2/18,6/18,6/18),heights=c(lcm(1),3/6,1/6,lcm(1),1/3))#
    #
    par(mar = c(0.1, 0.1, 0.1, 0.1))#
    par(oma = rep(1,4))#
    ltitle(paste("PCA ",dim(unclass(pcr$loadings))[2], "vars"),cex=1.6,ypos=0.7)#
    text(x=0,y=0.2,pos=4,cex=1,labels=deparse(pcr$call),col="black")#
    pcl=unclass(pcr$loadings)#
    pclperc=100*(pcr$sdev)/sum(pcr$sdev)#
    s.corcircle(pcl[,c(xax,yax)],1,2,sub=paste("(",xax,"-",yax,") ",#
                                     round(sum(pclperc[c(xax,yax)]),0),"%",sep=""),#
                possub="bottomright",csub=3,clabel=2)#
    wsel=c(xax,yax)#
    scatterutil.eigen(pcr$sdev,wsel=wsel,sub="")#
    #
    dend=hc#
    dend$labels=rep("",length(dend$labels))#
    dend=as.dendrogram(dend)#
#
    ngrp=length(cut(dend,hcut)$lower)#
    #
    ltitle(paste("Clustering ",ngrp, "groups"),cex=1.6,ypos=0.4)#
    #
    par(mar = c(3, 0.3, 1, 0.5))#
    #
    ## Dendrogram#
    attr(dend,"edgetext") = round(max(hc$height),1)#
    plot(dend, edgePar = list(lty=1, col=c("black","darkgrey")), edge.root=FALSE,horiz=TRUE,axes=TRUE)#
    #
    abline(v=hcut,col="red")#
    text(x=hcut,y=length(hc$height),labels=as.character(round(hcut,1)),col="red",pos=4)#
    #
    #
    colorsnames= brewer.pal(ngrp,"Dark2")#
    groupes=cutree(hc,h=hcut)#
    ttab=table(groupes)#
    #
    ## Groups#
    par(mar = c(0.3, 0.3, 1.6, 0.3))#
    mp=barplot(as.vector(rev(ttab)),horiz=TRUE,space=0,col=rev(colorsnames),#
               xlim=c(0,max(ttab)+10),axes=FALSE,main="Groups",axisnames=FALSE)#
    text(rev(ttab),mp,as.character(rev(ttab)),col=rev(colorsnames),cex=1.2,pos=4)#
#
#
    #
    ## Main ACP scatterplot#
#
    par(mar = c(0.1,0.1, 0.1,0.1))	#
    selscores=pcr$scores[,c(xax,yax)]#
    #
    zi=apply(datac,1,FUN=function(vec)return(sum(vec^2)))#
    cosinus= cbind(selscores[,1]^2 / zi,selscores[,2]^2 / zi)#
    cosinus= cbind(cosinus,apply(cosinus,1,sum))#
    ww= (cosinus[,wcos])*4 +0.5#
    #
    ## Outliers? Test with median+1.5*IQ#
    #
    ## Factor #1#
    out <- selscores[,1] < median(selscores[,1]) - 1.5 * diff(quantile(selscores[,1],c(0.25,0.75)))#
    out = out | selscores[,1] > median(selscores[,1]) + 1.5 * diff(quantile(selscores[,1],c(0.25,0.75)))#
    ## factor #2		#
    out = out | selscores[,2] < median(selscores[,2]) - 1.5 * diff(quantile(selscores[,2],c(0.25,0.75)))#
    out = out | selscores[,2] > median(selscores[,2]) + 1.5 * diff(quantile(selscores[,2],c(0.25,0.75)))#
#
    plot(selscores,axes=FALSE,main="",xlab="",ylab="",type="n")#
    abline(h=0,col="black")#
    abline(v=0,col="black")#
    #
    #
    points(selscores[!out,1:2],col=(colorsnames[groupes])[!out],cex=ww,pch=16)#
    #
    #
    text(x=selscores[out,1],y=selscores[out,2],labels=dimnames(selscores)[[1]][out],#
         col=(colorsnames[groupes])[out], adj=1)#
    box()#
    #
    #
#
#
    ## Factor 1#
    par(mar = c(0.1, 0.1, 0.1, 0.1))#
    ltitle(paste("Factor ",xax, " [",round(pclperc[xax],0),"%]",sep="" ),cex=1.6,ypos=0.4)#
    plotdens(pcr$scores[,c(xax)])#
    #
    ## Factor 2#
    par(mar = c(0.1, 0.1, 0.1, 0.1))#
    ltitle(paste("Factor ",yax," [",round(pclperc[yax],0),"%]",sep=""),cex=1.6,ypos=0.4)#
    plotdens(pcr$scores[,c(yax)])#
}#
#
confshade2 <- function(y, xlo, xhi, col = 8.)#
{#
    n <- length(y)#
    for(i in 1.:(n - 1.)) {#
        polygon(c(xlo[i], xlo[i + 1.], xhi[i + 1.], xhi[i]),#
                c(y[i], y[i + 1.], y[i + 1.], y[i]), col = col, border = FALSE)#
    }#
}#
#
confshade <- function(x, ylo, yhi, col = 8.)#
{#
    n <- length(x)#
    for(i in 1.:(n - 1.)) {#
        polygon(c(x[i], x[i + 1.], x[i + 1.], x[i]),#
                c(ylo[i], ylo[i + 1.], yhi[i + 1.], yhi[i]), col = col, border = FALSE)#
    }#
}#
#
#
plotdens <- function(X, npts = 200, range = 1.5, xlab = "", ylab = "", main = "", ...)#
{#
    dens <- density(X, n = npts)#
    qu <- quantile(X, c(0., 0.25, 0.5, 0.75, 1.))#
    x <- dens$x#
    y <- dens$y#
    fqux <- x[abs(x - qu[2.]) == min(abs(x - qu[2.]))]#
    fquy <- y[x == fqux]#
    fquX <- as.numeric(qu[2.])#
    tqux <- x[abs(x - qu[4.]) == min(abs(x - qu[4.]))]#
    tquy <- y[x == tqux]#
    tquX <- as.numeric(qu[4.])#
    medx <- x[abs(x - qu[3.]) == min(abs(x - qu[3.]))]#
    medy <- y[x == medx]#
    ## Prepare les donnees a dessiner#
    medX <- as.numeric(qu[3.])#
    dx <- dens$x#
    #
    dy <- dens$y#
    dx2 <- c(dx[dx <= fquX], fquX, dx[(dx > fquX) &#
                (dx <= medX)], medX, dx[(dx > medX) & (dx <= tquX)], tquX, dx[dx > tquX])#
    #
    dy2 <- 	c(dy[dx <= fquX], fquy, dy[(dx > fquX) & (dx <= medX)], medy,#
                  dy[(dx > medX) & (dx <= tquX)], tquy, dy[dx > tquX])#
    IQX <- dx2[(dx2 >= fquX) & (dx2 <= tquX)]#
    ###
    ###
    ## Initialise le graphique#
    ###
#
    ## Dessine la densite#
    IQy <- dy2[(dx2 >= fquX) & (dx2 <= tquX)]#
    ## Trace densit sous IQ#
    plot(0., 0., xlim = c(min(dx2), max(dx2)), ylim = c(min(dy2), max(dy2)),#
         axes = F, xlab = xlab, ylab = ylab, main = main,type="n", ...)#
    ## Ajoute mediane#
    confshade(IQX, rep(0., length(IQX)), IQy, col = "#bdfcc9")#
    bdw <- (tquX - fquX)/20.#
    x1 <- c(medX - bdw/2., medX - bdw/2.)#
    x2 <- c(medX + bdw/2., medX + bdw/2.)#
    y1 <- c(0., medy)#
    ## Ajoute lignes wiskers#
    polygon(c(x1, rev(x2)), c(y1, rev(y1)), col = 0.)#
    lines(x = c(fquX, fquX), y = c(0., fquy))#
    ## Ajoute wiskers#
    lines(x = c(tquX, tquX), y = c(0., tquy))#
    meany <- mean(dy2)#
    IQrange <- tquX - fquX#
    lines(x = c(medX - range * IQrange, fquX), y = c(meany, meany))#
    lines(x = c(tquX, medX + range * IQrange), y = c(meany, meany))#
    lines(x = c(medX - range * IQrange, medX - range * IQrange),#
          y = c(meany - (max(dy2) - min(dy2))/8., meany + (max(dy2) - min(dy2))/8.))#
#
    ## Ajoute outliers#
    #
    lines(x = c(medX + range * IQrange, medX + range * IQrange),#
          y = c(meany - (max(dy2) - min(dy2))/8., meany + (max(dy2) - min(dy2))/8.))#
    out <- c(X[X < medX - range * IQrange], X[X > medX + range * IQrange])#
#
    ## Ajoute les points...#
    ## Ajoute l'axe#
    points(out, rep(meany, length(out)), pch = 5., col = 2.)#
    ## Ajoute l'axe#
    points(dx2, dy2, pch = ".", type = "l")#
    ##return(x = dessinx2, y = dessiny2)#
    axis(1., at = round(c(min(x), fquX, medX, tquX, max(x)), 2.), labels = F,#
         pos = 0.)#
    invisible(list(x = dx2, y = dy2))#
}#
#
#
#
BoxDens <- function(data, npts = 200., x = c(0., 100.), y = c(0., 50.), orientation = "paysage",#
                    add = TRUE, col = 11., border=FALSE,colline = 1., Fill = TRUE)#
{#
    dens <- density(data, n = npts)#
    dx <- dens$x#
    dy <- dens$y#
    if(add == FALSE)#
        plot(0., 0., axes = F, main = "", xlim = x, ylim = y, xlab = "",#
             ylab = "")#
    if(orientation == "paysage") {#
        dx2 <- (dx - min(dx))/(max(dx) - min(dx)) * (x[2.] - x[1.]) * 0.98 +#
            x[1.]#
        dy2 <- (dy - min(dy))/(max(dy) - min(dy)) * (y[2.] - y[1.]) * 0.98 +#
            y[1.]#
        seqbelow <- rep(y[1.], length(dx))#
        if(Fill == T)#
            confshade(dx2, seqbelow, dy2, col = col)#
        if (border==TRUE) points(dx2, dy2, type = "l", col = colline)#
    }#
    else {#
        dy2 <- (dx - min(dx))/(max(dx) - min(dx)) * (y[2.] - y[1.]) * 0.98 +#
            y[1.]#
        dx2 <- (dy - min(dy))/(max(dy) - min(dy)) * (x[2.] - x[1.]) * 0.98 +#
            x[1.]#
        seqleft <- rep(x[1.], length(dy))#
        if(Fill == T)#
            confshade2(dy2, seqleft, dx2, col = col)#
        if (border==TRUE) points(dx2, dy2, type = "l", col = colline)#
    }#
    polygon(x = c(x[1.], x[2.], x[2.], x[1.]),#
            y = c(y[2.], y[2.], y[1.], y[1.]), density = 0.)#
}#
#
#
data(swiss)#
## png(file="swiss.png", width=600,height=400)#
plotacpclust(swiss[,1:5], 1, 3, hcut=48)#
## dev.off()
library(reshape)
library(ggplot2)
ori.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")
bs.dat=read.table("bootstrap_error.1.txt")
ori.df = data.frame(ori.dat)
bs.dat=data.frame(bs.dat)
names(ori.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
names(bs.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
bs.df = bs.dat
names(bs.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
bs.melted=melt(bs.df,id.var=c("Position","Phred"))
ori.melted=melt(ori.df,id.var=c("Position","Phred"))
names(bs.melted)<-c("Position","Phred","Substitution","Frequency")
names(ori.melted)<-c("Position","Phred","Substitution","Frequency")
bs.melted$Reference=substr(read1.melt$Substitution,1,1)
bs.melted$Reference=substr(ori.melted$Substitution,1,1)
bs.melted$Reference=substr(ori.melted$Substitution,1,1)
bs.df = bs.dat
bs.melted=melt(bs.df,id.var=c("Position","Phred"))
bs.df = bs.dat
names(bs.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
bs.melted=melt(bs.df,id.var=c("Position","Phred"))
names(bs.melted)<-c("Position","Phred","Substitution","Frequency")
bs.melted$Reference=substr(bs.melted$Substitution,1,1)
ori.melted$Reference=substr(ori.melted$Substitution,1,1)
qplot(Position,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="smooth",facets=.~ Reference)
qplot(Position,Phred,data=bs.melted,weight=Frequency,color=Substitution,geom="smooth",facets=.~ Reference)
qplot(Position,Frequency+1,data=ori.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
qplot(Position,Frequency+1,data=bs.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
qplot(Position,Phred,data=ori.melted,weight=Frequency,geom="smooth",color=Reference)
qplot(Position,Phred,data=bs.melted,weight=Frequency,geom="smooth",color=Reference)
qplot(Position,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",ymin="min",ymax="max",middle="mean",facets=.~ Reference)
qplot(Position,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets=.~ Reference)
warnings()
qplot(Position,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets= Reference.~)
qplot(Position,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets= Reference ~.)
help(boxplot)
boxplot(Position ~ Phred,data=ori.melted)
boxplot(Phred*Frequency ~ Position,data=ori.melted)
boxplot(Phred ~ Position,data=ori.melted)
qplot(Position~Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets= Reference ~.)
qplot(Position ~ Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets= Reference ~.)
qplot(x=Position ,y=Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="boxplot",facets= Reference ~.)
qplot(x=Position ,y=Phred,data=ori.melted,weight=Frequency,color=Substitution,geom="jitter",facets= Reference ~.)
qplot(x=Position ,y=Phred,data=ori.melted,weight=Frequency,color=Substitution,geom=c(smooth,boxplot),facets= Reference ~.)
qplot(Position ,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom=c(smooth,boxplot),facets= Reference ~.)
qplot(Position ,Phred,data=ori.melted,weight=Frequency,color=Substitution,geom=c("boxplot","smooth"),facets= Reference ~.)
qplot(Position,Phred,data=ori.melted,weight=Frequency,geom="boxplot",color=Reference)
qplot(Position,Phred,data=ori.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(Position,Phred,data=ori.melted,geom="boxplot",facets=Reference~.)
qplot(Phred,group=Position, data=ori.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(y=Phred,group=Position, data=ori.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(x=Position,y=Phred,group=Position, data=ori.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(x=Position,y=Phred,group=Position, data=ori.melted,weight=Frequency,geom="boxplot",color=Reference)
qplot(x=Position,y=Phred,group=Position, data=ori.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(x=Position,y=Phred,group=Position, data=bs.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
newbs.dat=read.table("bootstrapped_error_read1.txt")
newbs.df = data.frame(newbs.dat)
 names(ori.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
 names(newbs.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
newbs.melted=melt(newbs.df,id.var=c("Position","Phred"))
names(newbs.melted)<-c("Position","Phred","Substitution","Frequency")
newbs.melted$Reference=substr(newbs.melted$Substitution,1,1)
qplot(x=Position,y=Phred,group=Position, data=newbs.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
qplot(Position,Phred,data=newbs.melted,weight=Frequency,color=Substitution,geom="smooth",facets=.~ Reference)
qplot(Position,Frequency+1,data=newbs.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
qplot(Position,Frequency+1,data=newbs.melted,color=Substitution,geom="smooth",facets=Reference ~ .,log="y")
summary(newbs.melted)
newbs.melted[1]
newbs.melted[0][1]
summary(newbs.melted)
qplot(Position,Frequency+1,data=newbs.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
smallbs.dat=read.table("small.read1.error_profile.txt")
smallbs.df = data.frame(small.bs)
smallbs.df = data.frame(smallbs.dat)
 names(smallbs.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
smallbs.melted=melt(smallbs.df,id.var=c("Position","Phred"))
names(smallbs.melted)<-c("Position","Phred","Substitution","Frequency")
smallbs.melted$Reference=substr(smallbs.melted$Substitution,1,1)
 qplot(Position,Frequency+1,data=smallbs.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
qplot(Position,Phred,data=smallbs.melted,weight=Frequency,geom="smooth",color=Reference)
qplot(x=Position,y=Phred,group=Position, data=smallbs.melted,weight=Frequency,geom="boxplot",facets=Reference~.)
ls()
read1.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")
read1.df = data.frame(read1.dat)
 names(read1.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
read1.melted=melt(read1.df,id.var=c("Position","Phred"))
names(read1.melted)<-c("Position","Phred","Substitution","Frequency")
read1.melted$Reference=substr(read1.melted$Substitution,1,1)
read1.melted = read1.melted * 100
read1.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")
read1.dat = read1.dat * 100
read1.df = data.frame(read1.dat)
 names(read1.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
summary(read1.melted)
read1.melted$Frequency = read1.melted$Frequency * 100
summary(read1.melted)
 qplot(Position,Frequency+1,data=read1.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
ls
ls()
tmp.dat=read.table("test.tmp")
tmp.df=data.frame(tmp.dat)
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)
qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
 qplot(Position,Frequency+1,data=read1.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
> tmp.dat=read.table("test.tmp")#
> tmp.df=data.frame(tmp.dat)#
> names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
> tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
> names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
> tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
> qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("test.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("hiseq_mito_default-bwa-mapping_mq60_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("test.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("test.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")+ #
    scale_y_continuous(formatter = 'percent')
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y",formatter="percent")
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency+1,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference,log="y")
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
getErrorProfile -ref=L8.human.mtDNA.v2.fa -readLen=101 -phred33 -sam=mito_hnumtdb.filtered_mito.mq10.1.sam >hiseq_mito_default_bwa_mapping_mq10_1.txt#
getErrorProfile -ref=L8.human.mtDNA.v2.fa -readLen=101 -phred33 -sam=mito_hnumtdb.filtered_mito.mq10.2.sam >hiseq_mito_default_bwa_mapping_mq10_2.txt
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.ori.freqs.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.freqs.tmp")#
>  tmp.df=data.frame(tmp.dat)#
>  names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
>  tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
>  names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
>  tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
>  qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.ori.freqs.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.ori.freqs.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.ori.freqs.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.freqs.tmp")#
 tmp.df=data.frame(tmp.dat)#
 names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
 tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
 names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
 tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
 qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.ori.freqs.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Frequency,data=tmp.melted,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Phred,data=tmp.melted,weight=Frequency,color=Substitution,geom="smooth",facets=.~ Reference)
tmp.dat=read.table("test.tmp")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Phred,data=tmp.melted,weight=Frequency,geom="smooth",color=Reference)
tmp.dat=read.table("hiseq_mito_default_bwa_mapping_mq10_1.txt")#
tmp.df=data.frame(tmp.dat)#
names(tmp.df)<-c("Position", "Phred","A->A","A->C","A->G","A->T","A->N","C->A","C->C","C->G","C->T","C->N","G->A","G->C","G->G","G->T","G->N","T->A","T->C","T->G","T->T","T->N")#
tmp.melted<-melt(tmp.df,id.var=c("Position","Phred"))#
names(tmp.melted)<-c("Position","Phred","Substitution","Frequency")#
tmp.melted$Reference<-substr(tmp.melted$Substitution,1,1)#
qplot(Position,Phred,data=tmp.melted,weight=Frequency,geom="smooth",color=Reference)
